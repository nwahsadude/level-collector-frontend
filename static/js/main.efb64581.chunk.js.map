{"version":3,"sources":["LevelList.js","ClearedLevelList.js","SkippedLevelList.js","config.js","index.js"],"names":["LevelList","levelList","onDelete","onClear","onSkip","_","filter","b","cleared","skipped","length","map","level","key","levelCode","className","userName","Date","createdAt","toLocaleDateString","toLocaleTimeString","onClick","e","ClearedLevelList","config","url","environment","App","state","console","log","this","fetchLevels","deleteLevel","fetch","id","method","body","JSON","stringify","then","results","json","index","findIndex","setState","catch","err","contentClass","label","handleDelete","handleClear","handleSkip","SkippedLevelList","Component","render","document","getElementById"],"mappings":"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","file":"static/js/main.efb64581.chunk.js","sourcesContent":["import React from \"react\";\r\nimport * as _ from \"lodash\";\r\n\r\n\r\nconst LevelList = ({ levelList, onDelete, onClear, onSkip }) => {\r\n  function handleClick(a, event) {\r\n    onDelete(a);\r\n  }\r\n\r\n  levelList = _.sortBy(levelList, [\"createdAt\"]);\r\n  levelList = levelList.filter(b => {\r\n    return !b.cleared && !b.skipped;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h1>LevelCodes - {levelList.length}</h1>\r\n      </center>\r\n\r\n      {levelList.map(level => (\r\n        <center key={level.levelCode}>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"mb-1\">\r\n                <span className=\"levelCode\" >{level.levelCode}</span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <span className=\"userName\" >{level.userName}</span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <span>\r\n                  Added: {new Date(level.createdAt).toLocaleDateString()}{\" \"}\r\n                  {new Date(level.createdAt).toLocaleTimeString()}\r\n                </span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <button className=\"btn btn-success mr-2 ml-2\" onClick={e => onClear(level, e)}>\r\n                  {!level.cleared && (<span>Clear Level</span>)}\r\n                  {level.cleared && (<span>Un-Clear Level</span>)}\r\n                </button>\r\n                <button className=\"btn btn-warning  mr-2 ml-2\" onClick={e => onSkip(level, e)}>\r\n                {!level.skipped && (<span>Skip Level</span>)}\r\n                  {level.skipped && (<span>Un-Skip Level</span>)}\r\n                </button>\r\n                <button className=\"btn btn-danger mr-2 ml-2\" onClick={(e) => handleClick(level, e)}>Delete Level</button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </center>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelList;\r\n","import React from \"react\";\r\nimport * as _ from \"lodash\"\r\n\r\nconst ClearedLevelList = ({ levelList, onClear }) => {\r\n\r\n  levelList = _.orderBy(levelList, [\"createdAt\"], [\"desc\"]);\r\n  levelList = levelList.filter(b => {\r\n        return b.cleared && !b.skipped;\r\n      })\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h1>Cleared LevelCodes - {levelList.length}</h1>\r\n\r\n      </center>\r\n\r\n      {levelList.map(level => (\r\n        <center key={level.levelCode}>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"mb-1\">\r\n                <span className=\"levelCode\">{level.levelCode}</span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <span className=\"userName\" >{level.userName}</span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <span>Added: {new Date(level.createdAt).toLocaleDateString()} {new Date(level.createdAt).toLocaleTimeString()}</span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <button className=\"btn btn-info\" onClick={e => onClear(level, e)}>Redo Level</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </center>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClearedLevelList;\r\n","import React from \"react\";\r\nimport * as _ from \"lodash\";\r\n\r\nconst LevelList = ({ levelList, onSkip }) => {\r\n\r\n  levelList = _.sortBy(levelList, [\"createdAt\"]);\r\n  levelList = levelList.filter(b => {\r\n    return b.skipped && !b.cleared;\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h1> Skipped LevelCodes - {levelList.length}</h1>\r\n      </center>\r\n\r\n      {levelList.map(level => (\r\n        <center key={level.levelCode}>\r\n          <div className=\"card\">\r\n            <div className=\"card-body\">\r\n              <div className=\"mb-1\">\r\n                <span className=\"levelCode\" >{level.levelCode}</span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <span className=\"userName\" >{level.userName}</span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <span>\r\n                  Added: {new Date(level.createdAt).toLocaleDateString()}{\" \"}\r\n                  {new Date(level.createdAt).toLocaleTimeString()}\r\n                </span>\r\n              </div>\r\n              <div className=\"mb-1\">\r\n                <button className=\"btn btn-warning  mr-2 ml-2\" onClick={e => onSkip(level, e)}>\r\n                {!level.skipped && (<span>Skip Level</span>)}\r\n                  {level.skipped && (<span>Un-Skip Level</span>)}\r\n                </button>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </center>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LevelList;\r\n","const dev = {\r\n  url: \"vwwfgua8k2\",\r\n  environment: \"dev\"\r\n};\r\n\r\nconst prod = {\r\n  url: \"nnzw0f4u3h\",\r\n  environment: \"prod\"\r\n};\r\n\r\nconst config = process.env.NODE_ENV === \"production\" ? prod : dev;\r\nexport default {\r\n    ...config\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport LevelList from \"./LevelList\";\r\nimport ClearedLevelList from \"./ClearedLevelList\";\r\nimport SkippedLevelList from \"./SkippedLevelList\";\r\nimport \"./style.css\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Tabs, Tab } from \"react-bootstrap-tabs\";\r\nimport config from \"./config\";\r\n\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      levelList: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(config);\r\n\r\n    this.fetchLevels();\r\n  }\r\n\r\n  handleDelete(e) {\r\n    // let a = this.state.levelList.filter(level => {\r\n    //   return level.levelCode !== e.levelCode\r\n    // })\r\n\r\n    // this.setState({\r\n    //   levelList: a\r\n    // })\r\n    this.deleteLevel(e.levelCode);\r\n  }\r\n\r\n  handleClear(level) {\r\n    console.log(level);\r\n\r\n    fetch(\r\n      `https://${config.url}.execute-api.us-east-1.amazonaws.com/${config.environment}/level/clear/${level.id}`,\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ cleared: !level.cleared })\r\n      }\r\n    )\r\n      .then(results => results.json())\r\n      .then(json => {\r\n        const index = this.state.levelList.findIndex(\r\n          level => level.id === json.id\r\n        );\r\n        const levelList = [...this.state.levelList];\r\n        levelList[index] = json;\r\n        this.setState({ levelList });\r\n\r\n        console.log(json);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"err\");\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  handleSkip(level) {\r\n    console.log(level);\r\n\r\n    fetch(\r\n      `https://${config.url}.execute-api.us-east-1.amazonaws.com/${config.environment}/level/skip/${level.id}`,\r\n      {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({ skipped: !level.skipped })\r\n      }\r\n    )\r\n      .then(results => results.json())\r\n      .then(json => {\r\n        const index = this.state.levelList.findIndex(\r\n          level => level.id === json.id\r\n        );\r\n        const levelList = [...this.state.levelList];\r\n        levelList[index] = json;\r\n        this.setState({ levelList });\r\n\r\n        console.log(json);\r\n      })\r\n      .catch(err => {\r\n        console.log(\"err\");\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  fetchLevels() {\r\n    console.log(\"fetched levels\");\r\n    fetch(`https://${config.url}.execute-api.us-east-1.amazonaws.com/${config.environment}/level`)\r\n      .then(results => results.json())\r\n      .then(json => {\r\n        this.setState({\r\n          levelList: json\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"m-2\">\r\n        <center>\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={() => this.fetchLevels()}\r\n          >\r\n            Refresh\r\n          </button>\r\n        </center>\r\n\r\n        <div className=\"ml-2\">\r\n          <Tabs className=\"w-100\" contentClass=\"tab-content-default\">\r\n            <Tab label=\"LevelList\">\r\n              <div>\r\n                <LevelList\r\n                  levelList={this.state.levelList}\r\n                  onDelete={e => this.handleDelete(e)}\r\n                  onClear={e => this.handleClear(e)}\r\n                  onSkip={e => this.handleSkip(e)}\r\n                />\r\n              </div>\r\n            </Tab>\r\n            <Tab label=\"ClearedLevels\">\r\n              <div>\r\n                <ClearedLevelList\r\n                  levelList={this.state.levelList}\r\n                  onClear={e => this.handleClear(e)}\r\n                />\r\n              </div>\r\n            </Tab>\r\n            <Tab label=\"SkippedLevels\">\r\n              <div>\r\n                <SkippedLevelList\r\n                  levelList={this.state.levelList}\r\n                  onSkip={e => this.handleSkip(e)}\r\n                />\r\n              </div>\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nrender(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}